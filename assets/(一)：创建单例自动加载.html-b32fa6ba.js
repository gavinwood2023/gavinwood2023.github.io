import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as t,f as o}from"./app-cd2b6d67.js";const n="/assets/autoload_tab-f513919f.png",d="/assets/autoload_tab2-44a85d1c.png",s="/assets/autoload_tab3-fcac8959.png",r={},i=o('<h4 id="原理" tabindex="-1"><a class="header-anchor" href="#原理" aria-hidden="true">#</a> 原理</h4><p>自动加载脚本时，会创建一个 Node 并把脚本附加上去。加载其它任何场景前，这个节点就会被加到根视图上。</p><h4 id="自动加载" tabindex="-1"><a class="header-anchor" href="#自动加载" aria-hidden="true">#</a> 自动加载</h4><p>要自动加载场景或脚本，请从菜单中选择“项目(Project)”&gt;“项目设置(Project Settings)”，然后切换到“自动加载(Autoload)”选项卡。<br><img src="'+n+'" alt="autoload_tab.png" loading="lazy"></p><p>你可以在这里添加任意数量的场景或脚本。列表中的每个条目都需要一个名称，会被用来给该节点的 name 属性赋值。使用上下箭头键可以操纵将条目添加到全局场景树时的顺序。与普通场景一样，引擎读取这些节点的顺序是从上到下的。<br><img src="'+d+'" alt="autoload_tab2.png" loading="lazy"></p><p>运行场景树，就会看到自动加载的节点出现<br><img src="'+s+`" alt="autoload_tab3.png" loading="lazy"><br> 访问自动加载对象（脚本、场景）的方式和访问场景树中的任何其他节点是一样的。</p><p>示例</p><div class="language-godot line-numbers-mode" data-ext="godot"><pre class="language-godot"><code>var uiManager = get_node(&quot;/root/UiManager&quot;)
uiManager.func_test()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果在Autoload面板中，选中Enable (默认选中)，则可以直接在 GDScript 中访问单例，而不需要 get_node()：</p><p>示例</p><div class="language-godot line-numbers-mode" data-ext="godot"><pre class="language-godot"><code>UiManager.func_test()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,11),l=[i];function c(_,g){return e(),t("div",null,l)}const m=a(r,[["render",c],["__file","(一)：创建单例自动加载.html.vue"]]);export{m as default};
