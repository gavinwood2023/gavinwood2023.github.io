const e=JSON.parse(`{"key":"v-67e3b8c4","path":"/blog/MiniGame/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E5%8E%BB%E9%99%A4CocosLogo.html","title":"微信小游戏去除 Cocos Logo","lang":"zh-CN","frontmatter":{"title":"微信小游戏去除 Cocos Logo","icon":"pen-to-square","category":["minigame"],"tag":["minigame"],"article":true,"timeline":true,"dir":{"index":true,"order":1},"description":"需求 cocos打包微信小游戏，首屏加载出现cocos logo问题，去除cocos logo 参考 修改first-screen.js 第一处修改，注释 draw() function tick() { rafHandle = requestAnimationFrame(() =&gt; { // draw(); // 注释掉着色器绘制方法，因为进度条的绘制是通过着色器绘制的，咱们把返回替换掉会导致此方法报错 tick(); if (afterTick) { afterTick(); afterTick = null; } }); } 第二处修改 function start(alpha, antialias) { options.alpha = alpha === 'true' ? true : false; options.antialias = antialias === 'false' ? false : true; gl = window.canvas.getContext(\\"webgl\\", options); initVertexBuffer(); initProgressVertexBuffer(); initTexture(); // program = initShaders(VS_LOGO, FS_LOGO); // programProgress = initShaders(VS_PROGRESSBAR, FS_PROGRESSBAR); \\t// initShaders函数用于创建着色器程序。 \\t\\t// loadShader函数用于加载和编译着色器代码进度条，所以咱们注释掉 tick(); \\t// return loadImage('splash.png').then(() =&gt; { // updateVertexBuffer(); // updateTexture(); // return setProgress(0); // }); \\t//替换为下面的函数返回 return new Promise((resolve, reject) =&gt; { afterTick = () =&gt; { resolve(); }; }); }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/MiniGame/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E5%8E%BB%E9%99%A4CocosLogo.html"}],["meta",{"property":"og:site_name","content":"乐见分享"}],["meta",{"property":"og:title","content":"微信小游戏去除 Cocos Logo"}],["meta",{"property":"og:description","content":"需求 cocos打包微信小游戏，首屏加载出现cocos logo问题，去除cocos logo 参考 修改first-screen.js 第一处修改，注释 draw() function tick() { rafHandle = requestAnimationFrame(() =&gt; { // draw(); // 注释掉着色器绘制方法，因为进度条的绘制是通过着色器绘制的，咱们把返回替换掉会导致此方法报错 tick(); if (afterTick) { afterTick(); afterTick = null; } }); } 第二处修改 function start(alpha, antialias) { options.alpha = alpha === 'true' ? true : false; options.antialias = antialias === 'false' ? false : true; gl = window.canvas.getContext(\\"webgl\\", options); initVertexBuffer(); initProgressVertexBuffer(); initTexture(); // program = initShaders(VS_LOGO, FS_LOGO); // programProgress = initShaders(VS_PROGRESSBAR, FS_PROGRESSBAR); \\t// initShaders函数用于创建着色器程序。 \\t\\t// loadShader函数用于加载和编译着色器代码进度条，所以咱们注释掉 tick(); \\t// return loadImage('splash.png').then(() =&gt; { // updateVertexBuffer(); // updateTexture(); // return setProgress(0); // }); \\t//替换为下面的函数返回 return new Promise((resolve, reject) =&gt; { afterTick = () =&gt; { resolve(); }; }); }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-17T14:11:38.000Z"}],["meta",{"property":"article:author","content":"GavinWood"}],["meta",{"property":"article:tag","content":"minigame"}],["meta",{"property":"article:modified_time","content":"2024-08-17T14:11:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"微信小游戏去除 Cocos Logo\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-17T14:11:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GavinWood\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1723903898000,"updatedTime":1723903898000,"contributors":[{"name":"nick","email":"1175924232@qq.com","commits":1}]},"readingTime":{"minutes":0.81,"words":242},"filePathRelative":"blog/MiniGame/微信小游戏去除CocosLogo.md","localizedDate":"2024年8月17日","excerpt":"<h4> 需求</h4>\\n<p>cocos打包微信小游戏，首屏加载出现cocos logo问题，去除cocos logo</p>\\n<p><a href=\\"https://blog.csdn.net/jzhangc/article/details/133635599\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">参考</a></p>\\n<p>修改<code>first-screen.js</code></p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>第一处修改，注释 draw()\\nfunction tick() {\\n    rafHandle = requestAnimationFrame(() =&gt; {\\n        // draw(); // 注释掉着色器绘制方法，因为进度条的绘制是通过着色器绘制的，咱们把返回替换掉会导致此方法报错\\n        tick();\\n        if (afterTick) {\\n            afterTick();\\n            afterTick = null;\\n        }\\n    });\\n}\\n第二处修改\\nfunction start(alpha, antialias) {\\n    options.alpha = alpha === 'true' ? true : false;\\n    options.antialias = antialias === 'false' ? false : true;\\n    gl = window.canvas.getContext(\\"webgl\\", options);\\n    initVertexBuffer();\\n    initProgressVertexBuffer();\\n    initTexture();\\n    // program = initShaders(VS_LOGO, FS_LOGO);\\n    // programProgress = initShaders(VS_PROGRESSBAR, FS_PROGRESSBAR);\\n  \\t// initShaders函数用于创建着色器程序。\\n\\t\\t// loadShader函数用于加载和编译着色器代码进度条，所以咱们注释掉\\n    tick();\\n  \\t// return loadImage('splash.png').then(() =&gt; {\\n     //    updateVertexBuffer();\\n    //     updateTexture();\\n    //     return setProgress(0);\\n    // });\\n  \\t//替换为下面的函数返回 \\n    return new Promise((resolve, reject) =&gt; {\\n      afterTick = () =&gt; {\\n          resolve();\\n      };\\n  });\\n}\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
